# DAC Speech Transcription Platform
FROM ubuntu:16.04

MAINTAINER Neil Kleynhans <ntkleynhans@gmail.com>
LABEL Description="Docker containing Kaldi"

#Install standard tools from Ubuntu repo
RUN apt-get clean
RUN apt-get update 
RUN apt-get install -y apt-utils gcc g++ make autoconf automake libtool flex bison libatlas-dev libatlas-base-dev build-essential git zlib1g-dev wget subversion python sox vorbis-tools swig python-setuptools python-dev python-numpy libgtk2.0-0 libpulse0 libasound2 bc autotools-dev texinfo libgsl0-dev gsl-bin perl libsox-fmt-all libaudio-wav-perl

RUN unlink /bin/sh && ln -s /bin/bash /bin/sh

RUN groupadd -g 1000 dac
RUN useradd -u 1000 -g 1000 -ms /bin/bash dac
RUN chown -R dac:dac /home/dac
ENV HOME=/home/dac
ENV PERSISTENT_FS=/mnt/stp
ENV USERNAME=dac
WORKDIR $HOME

RUN mkdir $HOME/local

# OpenFST-1.3.1 install for PyOpenFST
RUN mkdir $HOME/align
RUN mkdir $HOME/align/software
RUN cd $HOME/align/software/ && wget http://www.openfst.org/twiki/pub/FST/FstDownload/openfst-1.3.1.tar.gz && tar -zxf openfst-1.3.1.tar.gz
RUN cd $HOME/align/software/openfst-1.3.1 && ./configure --prefix=$HOME/local && make -j 10 && make install

# PyOpenFST
RUN cd $HOME/align/software && git clone https://github.com/tmbdev/pyopenfst.git
RUN cd $HOME/align/software/pyopenfst/ && CPATH=$HOME/local/include/ LIBRARY_PATH=$HOME/local/lib python setup.py build
RUN cd $HOME/align/software/pyopenfst/ && CPATH=$HOME/include/ LIBRARY_PATH=$HOME/local/lib python setup.py install --prefix=$HOME/local
ENV PATH=$PATH:$HOME/local/bin/
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/local/lib

# Sequitur
RUN cd $HOME/align/software && wget https://www-i6.informatik.rwth-aachen.de/web/Software/g2p-r1668-r3.tar.gz && tar -zxf g2p-r1668-r3.tar.gz
RUN cd $HOME/align/software/g2p && python setup.py build && python setup.py install --prefix=$HOME/local
ENV PYTHONPATH=$PYTHONPATH:$HOME/local/lib/python2.7/site-packages/

# Change owner
RUN chown -R dac:dac $HOME/align
RUN chown -R dac:dac $HOME/local

# Copy in diarization
RUN mkdir $HOME/diarize
COPY diarize $HOME/diarize/
RUN chown -R dac:dac $HOME/diarize

# Fix autotools links
RUN ln -s /usr/bin/aclocal /usr/bin/aclocal-1.9
RUN ln -s /usr/bin/automake /usr/bin/automake-1.9
RUN ln -s /usr/bin/automake /usr/bin/automake-1.11
RUN ln -s /usr/bin/aclocal /usr/bin/aclocal-1.11

# Install SPRO
RUN cd /root && git clone https://github.com/giuliopaci/SPro
RUN cd /root/SPro && sed -i 's:AM_C_PROTOTYPES:#AM_C_PROTOTYPES:g' configure.in
RUN cd /root/SPro && sed -i 's:-lm -L. -lspro @sphere_lib@:-lm -L. -lspro @sphere_lib@ -lm:g' Makefile.am 
RUN cd /root/SPro && sed -i 's:-lm -L. -lspro @sphere_lib@:-lm -L. -lspro @sphere_lib@ -lm:g' Makefile.in 
RUN cd /root/SPro && ./configure CFLAGS="-Wall -O3" && make; exit 0
RUN cd /root/SPro && automake --add-missing && make && make install

# Install audioseg
RUN cd /root/ && wget https://gforge.inria.fr/frs/download.php/file/31320/audioseg-1.2.2.tar.gz && tar -zxf audioseg-1.2.2.tar.gz
RUN cd /root/audioseg-1.2.2 && sed -i 's:-L. -laudioseg -lm @SPRO_LIBS@ @SPHERE_LIBS@:-L. -laudioseg -lm @SPRO_LIBS@ @SPHERE_LIBS@ -lm:g' src/Makefile.in
RUN cd /root/audioseg-1.2.2 && sed -i 's:-L. -laudioseg -lm @SPRO_LIBS@ @SPHERE_LIBS@:-L. -laudioseg -lm @SPRO_LIBS@ @SPHERE_LIBS@ -lm:g' src/Makefile.am
RUN cd /root/audioseg-1.2.2 && sed -i 's:AM_C_PROTOTYPES:#AM_C_PROTOTYPES:g' configure.in
RUN cd /root/audioseg-1.2.2 && ./configure && make; exit 0
RUN cd /root/audioseg-1.2.2 && automake --add-missing && make && make install

# Copy PRAAT in place
COPY diarize_long/praat /usr/local/bin

# Copy diarize scripts
RUN mkdir $HOME/diarize_long
COPY diarize_long/ $HOME/diarize_long/
RUN chown -R dac:dac $HOME/diarize_long
RUN chmod -R a+x $HOME/diarize_long

# Copy in recognize
RUN mkdir $HOME/recognize
COPY recognize $HOME/recognize
RUN chown -R dac:dac $HOME/recognize

RUN mkdir $HOME/recognize_html
COPY recognize_html $HOME/recognize_html
RUN chown -R dac:dac $HOME/recognize_html

# Copy in alignment scripts and setup environment
COPY align/textnorm $HOME/align/textnorm
COPY align/align_kaldi $HOME/align/align_kaldi
RUN chown -R dac:dac $HOME/align

ENV ALIGNKALDI_ROOT=/home/dac/align/align_kaldi
ENV KALDI_ROOT=/home/dac/kaldi/
ENV TEXTNORM_ROOT=/home/dac/align/textnorm/

#NOTE: Change this is the alignment resources are in a different place
ENV MODEL_ROOT=/mnt/stp/align

USER dac

# Build Kaldi
RUN cd $HOME && git clone https://github.com/kaldi-asr/kaldi
RUN cd $HOME/kaldi/tools && make
RUN cd $HOME/kaldi/src && ./configure && make depend && make -j 2
RUN cd $HOME/kaldi && rm -r egs/ 
RUN cd $HOME/kaldi/src && find -type f -iname '*.o' -delete && find -type f -iname '*.cc' -delete && find -type f -iname '*.h' -delete
RUN cd $HOME/kaldi/src && find -type f -wholename '*bin*' -executable -exec strip {} \;

